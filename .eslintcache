[{"/home/rym/client/src/index.js":"1","/home/rym/client/src/App.js":"2","/home/rym/client/src/container/Login.js":"3","/home/rym/client/src/container/signup.js":"4","/home/rym/client/src/components/dashboard.js":"5","/home/rym/client/src/components/Productcontent.js":"6","/home/rym/client/src/components/WishlistContent.js":"7"},{"size":412,"mtime":1614004041600,"results":"8","hashOfConfig":"9"},{"size":875,"mtime":1614004041600,"results":"10","hashOfConfig":"9"},{"size":3586,"mtime":1614005194511,"results":"11","hashOfConfig":"9"},{"size":2547,"mtime":1614004041600,"results":"12","hashOfConfig":"9"},{"size":24944,"mtime":1614010154595,"results":"13","hashOfConfig":"9"},{"size":8764,"mtime":1614004041600,"results":"14","hashOfConfig":"9"},{"size":10748,"mtime":1614004041600,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"193jell",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/rym/client/src/index.js",[],["34","35"],"/home/rym/client/src/App.js",[],"/home/rym/client/src/container/Login.js",[],"/home/rym/client/src/container/signup.js",["36","37"],"import React, { Component } from 'react';\nimport { Link  , withRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Signup(props)  { \n  console.log(props.user) ; \n  const history = useHistory();\n function  handlesubmit (e){\n\n    \n    e.preventDefault();\n    const username= e.target.elements.username.value;\n    const useremail= e.target.elements.useremail.value;\n    const password= e.target.elements.password.value;\n    console.log(username , password );\n\n   axios.post(`http://localhost:4000/user/signup`,{\n       username : username ,\n       useremail : useremail,\n       password : password \n   })\n    .then (response =>{\n      console.log({\"response\":response})\n      console.log(response.data);\n      if (response.data){\n        history.push('/');\n      }\n    })\n    .catch(error =>{\n      console.log({\" error\":error})\n    })\n  }\n    return (\n      <div className=\"login-wrapper\">\n        <div className=\"auth-content\">\n          <div className=\"card\">\n            <div className=\"card-body text-center\">\n              <div className=\"mb-4\">\n                <img className=\"brand\" src=\"assets/img/logo.JPG\" alt=\"bootstraper logo\" />\n              </div>\n              <form onSubmit={handlesubmit}>\n                <div className=\"form-group text-left\">\n                  <label htmlFor=\"username\">user Name</label>\n                  <input type=\"text\" name=\"username\" className=\"form-control\" required />\n                </div>\n                <div className=\"form-group text-left\">\n                  <label htmlFor=\"useremail\">E-mail</label>\n                  <input type=\"text\" name=\"useremail\" className=\"form-control\" required />\n                </div>\n                <div className=\"form-group text-left\">\n                  <label htmlFor=\"password\">Password</label>\n                  <div className=\"input-group\">\n                    <input type=\"password\" name=\"password\" className=\"form-control\" required />\n                    <div className=\"input-group-addon\">\n\n                      <span className=\"glyphicon glyphicon-eye-open\" />\n\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn  mb-4 se-connecter\"> Sign UP  </button>\n              </form>\n              <p className=\"mb-2 text-muted\">Already have an account?<Link to=\"/\"> <a href=\"forgot-password.html\">Sign in</a> </Link></p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n\nexport default Signup; ","/home/rym/client/src/components/dashboard.js",["38","39"],"/home/rym/client/src/components/Productcontent.js",["40","41","42","43","44"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Modal, Button, Form } from \"antd\";\nimport {\n  Upload,\n  DatePicker,\n  Switch,\n  Input,\n  InputNumber,\n  Select,\n  TextArea,\n} from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nclass Productcontent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalVisible: false,\n      isModalVisible0: false,\n    };\n  }\n  formRef = React.createRef();\n  showModal = () => {\n    this.setState({ isModalVisible: true });\n  };\n  showModal0 = () => {\n    this.setState({ isModalVisible0: true });\n  };\n  handleCancel = () => {\n    this.setState({ isModalVisible: false });\n  };\n  handleCancel0 = () => {\n    this.setState({ isModalVisible0: false });\n    this.formRef.current.resetFields();\n  };\n  handleOk = () => {\n    const id = this.props.list[\"_id\"];\n    axios\n      .delete(`http://localhost:4000/product/id/${id}`)\n      .then((response) => {\n        console.log(\"done\");\n        this.setState({ isModalVisible: false });\n      })\n      .catch((error) => {\n        console.log({ error });\n      });\n  };\n  onFinish = (values) => {\n      console.log(values)\n    // const id =this.props.list[\"_id\"]\n    //     axios.patch(`http://localhost:4000/wishlist` ,{id : id , wishlistname :values.wishlistname})\n    //       .then((response) => {\n    //         this.setState({ key: Math.random() });\n    //       })\n    //       .catch((error) => {\n    //         console.log({ error });\n    //       });\n        //this.setwishlist(values.wishlistname);\n        this.setState({ isModalVisible0: false });\n      };\n\n  render() {\n    return (\n      <div className=\"col-lg-12\">\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-row\">\n                  <div\n                    className=\"form-group col-md-6\"\n                    style={{ border: \"1px solid #cccccc\" }}\n                  >\n                    <img\n                      name=\"image\"\n                      width=\"200px\"\n                      height=\"200px\"\n                      src={this.props.list[\"imageurl\"]}\n                    />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <div className=\"form-row\">\n                      <h5> {this.props.list[\"productname\"]} </h5>\n                    </div>\n                    <div className=\"form-row\">\n                      <p> {this.props.list[\"description\"]} </p>\n                    </div>\n                    <br />\n                    <div class=\"form-group row\">\n                      <h6 class=\"col-sm-3\">Price:</h6>\n                      <div class=\"col-sm-3\">\n                        <p> {this.props.list[\"productprice\"]} $ </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"state\">Wishlist</label>\n                  <select\n                    name=\"state\"\n                    className=\"form-control col-md-4\"\n                    required\n                  >\n                    <option value selected>\n                      {this.props.list[\"wishlistname\"]}\n                    </option>\n                    <option value={1}> wishlist 1</option>\n                    <option value={2}> wishlist 1</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"state\">Status</label>\n                  <select\n                    name=\"state\"\n                    className=\"form-control col-md-4\"\n                    required\n                  >\n                    <option value selected>\n                      {this.props.list[\"status\"]}\n                    </option>\n                    <option value={1}> Bought </option>\n                  </select>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"col-md-2\">\n            <Button type=\"primary\" onClick={this.showModal0}>\n              <i className=\"fas fa-edit\" /> Edit\n            </Button>\n            <Modal\n              title=\"Edit Product\"\n              visible={this.state.isModalVisible0}\n              footer={null}\n              onCancel={this.handleCancel0}\n            >\n              <Form\n                {...layout}\n                ref={this.formRef}\n                name=\"control-ref\"\n                onFinish={this.onFinish}\n              >\n                <Form.Item\n                  name=\"upload\"\n                  label=\"Upload\"\n                  valuePropName=\"fileList\"\n                  getValueFromEvent={normFile}\n                  extra=\"longgggggggggggggggggg\"\n                >\n                  <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                    <Button icon={<UploadOutlined />}>Click to upload</Button>\n                  </Upload>\n                </Form.Item>\n                <Form.Item\n                  label=\" Name\"\n                  required\n                  tooltip=\"This is a required field\"\n                  \n                >\n                  <Input placeholder={this.props.list[\"productname\"]} />\n                </Form.Item>\n                <Form.Item label=\"Price \">\n                  <Form.Item name=\"input-number\" noStyle>\n                    <InputNumber placeholder={this.props.list[\"productprice\"]} />\n                  </Form.Item>\n                </Form.Item>\n                <Form.Item\n                  name=\"currency\"\n                  label=\"currency\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder={this.props.list[\"currency\"]} >\n                    <Option value=\"china\">TND</Option>\n                    <Option value=\"usa\">Euro</Option>\n                    <Option value=\"usa\">Dollar</Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item name={[\"user\", \"introduction\"]} label=\"Description\">\n                  <Input.TextArea placeholder={this.props.list[\"description\"]} />\n                </Form.Item>\n                <Form.Item\n                  name=\"wishlist\"\n                  label=\"wishlist\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder={this.props.list[\"wishlistname\"]}>\n\n                      {\n                          this.props.wishlists.map((element)=>{\n                              return(\n                                <Option value={element[\"wishlistname\"]}> {element[\"wishlistname\"]} </Option>\n                              )\n                          })\n                      }\n            \n\n\n\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"Status\"\n                  label=\"Status\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder={this.props.list[\"status\"]}>\n                    <Option value=\"china\">To buy</Option>\n                    <Option value=\"usa\">Bought</Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.handleCancel0}>\n                    Cancel\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n\n            <Button type=\"primary\" onClick={this.showModal}>\n              <i className=\"fas fa-trash-alt\" /> Delete\n            </Button>\n            <Modal\n              title=\"Are you sure to delete this product\"\n              visible={this.state.isModalVisible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            ></Modal>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Productcontent;\n","/home/rym/client/src/components/WishlistContent.js",["45","46","47","48","49","50"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Modal, Button, Form, Input } from \"antd\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n\nclass WishlistContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      isModalVisible: false,\n      isModalVisible2: false\n    };\n  }\n  formRef = React.createRef();\n  componentDidMount() {\n    const id = this.props.list[\"_id\"]\n    axios.get(`http://localhost:4000/product/wishlist/${id}`)\n      .then((response) => {\n        this.setState({ products: response.data });\n      })\n      .catch((error) => {\n        console.log({ error });\n      });\n  }\n  showModal = () => {\n    this.setState({ isModalVisible: true });\n  };\n\n  onCancel = () => {\n    this.setState({ isModalVisible: false });\n    this.formRef.current.resetFields();\n  };\n  onFinish = (values) => {\n    const id = this.props.list[\"_id\"]\n    axios.patch(`http://localhost:4000/wishlist`, { id: id, wishlistname: values.wishlistname })\n      .then((response) => {\n        // component should re-render\n        this.forceUpdate();\n      })\n      .catch((error) => {\n        console.log({ error });\n      });\n    this.setState({ isModalVisible: false });\n    this.formRef.current.resetFields();\n  };\n  showModal2 = () => {\n    this.setState({ isModalVisible2: true });\n  };\n  handleOk = () => {\n    const id = this.props.list[\"_id\"]\n    axios.delete(`http://localhost:4000/wishlist/id/${id}`)\n      .then((response) => {\n        // component should re-render\n        this.forceUpdate();\n        this.setState({ isModalVisible2: false });\n      })\n      .catch((error) => {\n        console.log({ error });\n      });\n  }\n  handleCancel2 = () => {\n    this.setState({ isModalVisible2: false });\n  };\n  render() {\n    return (\n      <div id=\"body\">\n        <div className=\"container\">\n          {/* header */}\n\n          <ul className=\"nav\">\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link active\"\n                id=\"home-tab\"\n                data-toggle=\"tab\"\n                href=\"#home\"\n                role=\"tab\"\n                aria-controls=\"home\"\n                aria-selected=\"false\"\n              >\n                <h4> {this.props.list[\"wishlistname\"]} </h4>\n              </a>\n            </li>\n            <li className=\"nav-item ml-auto\">\n\n              <Button onClick={this.showModal} type=\"primary\">\n                <i className=\"fas fa-edit\" /> Edit\n                              </Button>\n\n                              {/* <button className=\"btn btn-outline-primary mb-2\" onClick={this.showModal} type=\"primary\">\n                <i className=\"fas fa-edit\" /> Edit\n                              </button> */}\n\n              <Modal\n                title=\"Edit wishlist \"\n                visible={this.state.isModalVisible}\n                footer={null}\n                onCancel={this.onCancel}\n                focusTriggerAfterClose={false}\n              >\n                <Form\n                  {...layout}\n                  ref={this.formRef}\n                  name=\"control-ref\"\n                  onFinish={this.onFinish}\n                >\n                  <Form.Item\n                    name=\"wishlistname\"\n                    label=\"wishlist name\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your wishlist name!\",\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item {...tailLayout}>\n                    <Button\n                      style={{ marginRight: \"8px\" }}\n                      htmlType=\"button\"\n                      onClick={this.onCancel}\n                    >\n                      Cancel\n                                </Button>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      Done\n                                </Button>\n                  </Form.Item>\n                </Form>\n              </Modal>\n\n            </li>\n            <li className=\"nav-item\">\n                <Button type=\"primary\" onClick={this.showModal2}>\n                  <i className=\"fas fa-trash-alt\" />  Delete\n      </Button>\n      {/* <button className=\"btn btn-outline-danger mb-2\" type=\"primary\" onClick={this.showModal2}>\n                  <i className=\"fas fa-trash-alt\" />  Delete\n      </button> */}\n                <Modal title=\"Are you sure to delete wishlist\" visible={this.state.isModalVisible2} onOk={this.handleOk} onCancel={this.handleCancel2}>\n                </Modal>\n            </li>\n          </ul>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              {/* navbar  */}\n              <div className=\"card-body\">\n                <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                  <li className=\"nav-item\">\n                    <a\n                      className=\"nav-link active\"\n                      id=\"home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#tobuy\"\n                      role=\"tab\"\n                      aria-controls=\"home\"\n                      aria-selected=\"false\"\n                    >\n                      To buy\n                    </a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a\n                      className=\"nav-link\"\n                      id=\"profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#bought\"\n                      role=\"tab\"\n                      aria-controls=\"profile\"\n                      aria-selected=\"false\"\n                    >\n                      Bought\n                    </a>\n                  </li>\n                  <li className=\"nav-item ml-auto\">\n                    <a className=\"nav-link active\">\n                      <i className=\"fas fa-list\" /> List{\" \"}\n                    </a>\n                  </li>\n                  <li className=\"nav-item \">\n                    <a\n\n                      href=\"#\"\n                      className=\"nav-link\"\n                    >\n                      <i className=\"fas fa-th\" /> Grid{\" \"}\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              {/* content */}\n\n              <div className=\"card-body\">\n                <div className=\"tab-content\" id=\"myTabContent\">\n                  {/* to buy products  */}\n                  <div\n                    className=\"tab-pane fade active show\"\n                    id=\"tobuy\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"home-tab\"\n                  >\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        {/* dynamique data */}\n                        <table className=\"table\" style={\n                          { width: \"100%\" }\n                        }>\n                          <thead>\n                            <tr>\n                              <th>Image</th>\n                              <th>Name </th>\n                              <th>description </th>\n                              <th>Status</th>\n                              <th>Price</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n\n                            {\n                              this.state.products.map((product) => {\n                                if (product[\"status\"] === \"to buy\") {\n                                  return (\n                                    <tr>\n\n                                      <th> <img width=\"50\" height=\"50\" src=\"\" /> </th>\n                                      <td> {product['productname']} </td>\n                                      <td>{product['description']}</td>\n                                      <td>{product['status']}</td>\n                                      <td> {product['productprice']} </td>\n                                    </tr>\n                                  );\n                                }\n                              })\n                            }\n\n                          </tbody>\n                        </table>\n                      </div>\n\n                    </div>\n                  </div>\n                  {/* bought products */}\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"bought\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"profile-tab\"\n                  >\n                    <div className=\"card\">\n                      <div className=\"card-body\">\n                        <div className=\"table-responsive\">\n                          <table className=\"table\">\n                            <thead>\n                              <tr>\n                                <th>Image</th>\n                                <th>Name </th>\n                                <th>description </th>\n                                <th>Status</th>\n                                <th>Price</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n\n                              {this.state.products.map((product) => {\n                                if (product[\"status\"] === \"bought\")\n                                  return (\n                                    <tr>\n                                      <th>\n                                        {\" \"}\n                                        <img\n                                          width=\"40\"\n                                          height=\"40\"\n                                          src={product[\"imageurl\"]}\n                                        />{\" \"}\n                                      </th>\n                                      <td> {product[\"productname\"]} </td>\n                                      <td>{product[\"description\"]}</td>\n                                      <td>{product[\"status\"]}</td>\n                                      <td> {product[\"productprice\"]} </td>\n                                    </tr>\n                                  );\n                              })}\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WishlistContent;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"59","line":2,"column":18,"nodeType":"57","messageId":"58","endLine":2,"endColumn":28},{"ruleId":"55","severity":1,"message":"60","line":12,"column":3,"nodeType":"57","messageId":"58","endLine":12,"endColumn":11},{"ruleId":"55","severity":1,"message":"61","line":14,"column":26,"nodeType":"57","messageId":"58","endLine":14,"endColumn":39},{"ruleId":"55","severity":1,"message":"62","line":7,"column":3,"nodeType":"57","messageId":"58","endLine":7,"endColumn":13},{"ruleId":"55","severity":1,"message":"63","line":8,"column":3,"nodeType":"57","messageId":"58","endLine":8,"endColumn":9},{"ruleId":"55","severity":1,"message":"60","line":12,"column":3,"nodeType":"57","messageId":"58","endLine":12,"endColumn":11},{"ruleId":"55","severity":1,"message":"61","line":14,"column":26,"nodeType":"57","messageId":"58","endLine":14,"endColumn":39},{"ruleId":"64","severity":1,"message":"65","line":100,"column":21,"nodeType":"66","endLine":105,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":196,"column":21,"nodeType":"66","endLine":196,"endColumn":52},{"ruleId":"67","severity":1,"message":"69","line":201,"column":21,"nodeType":"66","endLine":205,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":240,"column":65,"nodeType":"72","messageId":"73","endLine":240,"endColumn":67},{"ruleId":"64","severity":1,"message":"65","line":245,"column":44,"nodeType":"66","endLine":245,"endColumn":81},{"ruleId":"70","severity":1,"message":"71","line":284,"column":66,"nodeType":"72","messageId":"73","endLine":284,"endColumn":68},{"ruleId":"64","severity":1,"message":"65","line":290,"column":41,"nodeType":"66","endLine":294,"endColumn":43},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'TextArea' is defined but never used.","'InboxOutlined' is defined but never used.","'DatePicker' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]