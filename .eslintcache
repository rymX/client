[{"/home/rym/client/src/index.js":"1","/home/rym/client/src/App.js":"2","/home/rym/client/src/container/Login.js":"3","/home/rym/client/src/container/signup.js":"4","/home/rym/client/src/components/dashboard.js":"5","/home/rym/client/src/components/Productcontent.js":"6","/home/rym/client/src/components/WishlistContent.js":"7"},{"size":412,"mtime":1613980675646,"results":"8","hashOfConfig":"9"},{"size":875,"mtime":1613991058355,"results":"10","hashOfConfig":"9"},{"size":3463,"mtime":1613990750000,"results":"11","hashOfConfig":"9"},{"size":2547,"mtime":1613990447901,"results":"12","hashOfConfig":"9"},{"size":19963,"mtime":1613992401924,"results":"13","hashOfConfig":"9"},{"size":8764,"mtime":1613989455746,"results":"14","hashOfConfig":"9"},{"size":10748,"mtime":1613992822014,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"193jell",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rym/client/src/index.js",[],["33","34"],"/home/rym/client/src/App.js",[],"/home/rym/client/src/container/Login.js",[],"/home/rym/client/src/container/signup.js",["35","36"],"import React, { Component } from 'react';\nimport { Link  , withRouter} from 'react-router-dom';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Signup(props)  { \n  console.log(props.user) ; \n  const history = useHistory();\n function  handlesubmit (e){\n\n    \n    e.preventDefault();\n    const username= e.target.elements.username.value;\n    const useremail= e.target.elements.useremail.value;\n    const password= e.target.elements.password.value;\n    console.log(username , password );\n\n   axios.post(`http://localhost:4000/user/signup`,{\n       username : username ,\n       useremail : useremail,\n       password : password \n   })\n    .then (response =>{\n      console.log({\"response\":response})\n      console.log(response.data);\n      if (response.data){\n        history.push('/');\n      }\n    })\n    .catch(error =>{\n      console.log({\" error\":error})\n    })\n  }\n    return (\n      <div className=\"login-wrapper\">\n        <div className=\"auth-content\">\n          <div className=\"card\">\n            <div className=\"card-body text-center\">\n              <div className=\"mb-4\">\n                <img className=\"brand\" src=\"assets/img/logo.JPG\" alt=\"bootstraper logo\" />\n              </div>\n              <form onSubmit={handlesubmit}>\n                <div className=\"form-group text-left\">\n                  <label htmlFor=\"username\">user Name</label>\n                  <input type=\"text\" name=\"username\" className=\"form-control\" required />\n                </div>\n                <div className=\"form-group text-left\">\n                  <label htmlFor=\"useremail\">E-mail</label>\n                  <input type=\"text\" name=\"useremail\" className=\"form-control\" required />\n                </div>\n                <div className=\"form-group text-left\">\n                  <label htmlFor=\"password\">Password</label>\n                  <div className=\"input-group\">\n                    <input type=\"password\" name=\"password\" className=\"form-control\" required />\n                    <div className=\"input-group-addon\">\n\n                      <span className=\"glyphicon glyphicon-eye-open\" />\n\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn  mb-4 se-connecter\"> Sign UP  </button>\n              </form>\n              <p className=\"mb-2 text-muted\">Already have an account?<Link to=\"/\"> <a href=\"forgot-password.html\">Sign in</a> </Link></p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n\nexport default Signup; ","/home/rym/client/src/components/dashboard.js",["37","38"],"/home/rym/client/src/components/Productcontent.js",["39","40","41","42","43"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Modal, Button, Form } from \"antd\";\nimport {\n  Upload,\n  DatePicker,\n  Switch,\n  Input,\n  InputNumber,\n  Select,\n  TextArea,\n} from \"antd\";\nimport { UploadOutlined, InboxOutlined } from \"@ant-design/icons\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nclass Productcontent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalVisible: false,\n      isModalVisible0: false,\n    };\n  }\n  formRef = React.createRef();\n  showModal = () => {\n    this.setState({ isModalVisible: true });\n  };\n  showModal0 = () => {\n    this.setState({ isModalVisible0: true });\n  };\n  handleCancel = () => {\n    this.setState({ isModalVisible: false });\n  };\n  handleCancel0 = () => {\n    this.setState({ isModalVisible0: false });\n    this.formRef.current.resetFields();\n  };\n  handleOk = () => {\n    const id = this.props.list[\"_id\"];\n    axios\n      .delete(`http://localhost:4000/product/id/${id}`)\n      .then((response) => {\n        console.log(\"done\");\n        this.setState({ isModalVisible: false });\n      })\n      .catch((error) => {\n        console.log({ error });\n      });\n  };\n  onFinish = (values) => {\n      console.log(values)\n    // const id =this.props.list[\"_id\"]\n    //     axios.patch(`http://localhost:4000/wishlist` ,{id : id , wishlistname :values.wishlistname})\n    //       .then((response) => {\n    //         this.setState({ key: Math.random() });\n    //       })\n    //       .catch((error) => {\n    //         console.log({ error });\n    //       });\n        //this.setwishlist(values.wishlistname);\n        this.setState({ isModalVisible0: false });\n      };\n\n  render() {\n    return (\n      <div className=\"col-lg-12\">\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <form>\n                <div className=\"form-row\">\n                  <div\n                    className=\"form-group col-md-6\"\n                    style={{ border: \"1px solid #cccccc\" }}\n                  >\n                    <img\n                      name=\"image\"\n                      width=\"200px\"\n                      height=\"200px\"\n                      src={this.props.list[\"imageurl\"]}\n                    />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <div className=\"form-row\">\n                      <h5> {this.props.list[\"productname\"]} </h5>\n                    </div>\n                    <div className=\"form-row\">\n                      <p> {this.props.list[\"description\"]} </p>\n                    </div>\n                    <br />\n                    <div class=\"form-group row\">\n                      <h6 class=\"col-sm-3\">Price:</h6>\n                      <div class=\"col-sm-3\">\n                        <p> {this.props.list[\"productprice\"]} $ </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"state\">Wishlist</label>\n                  <select\n                    name=\"state\"\n                    className=\"form-control col-md-4\"\n                    required\n                  >\n                    <option value selected>\n                      {this.props.list[\"wishlistname\"]}\n                    </option>\n                    <option value={1}> wishlist 1</option>\n                    <option value={2}> wishlist 1</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"state\">Status</label>\n                  <select\n                    name=\"state\"\n                    className=\"form-control col-md-4\"\n                    required\n                  >\n                    <option value selected>\n                      {this.props.list[\"status\"]}\n                    </option>\n                    <option value={1}> Bought </option>\n                  </select>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"col-md-2\">\n            <Button type=\"primary\" onClick={this.showModal0}>\n              <i className=\"fas fa-edit\" /> Edit\n            </Button>\n            <Modal\n              title=\"Edit Product\"\n              visible={this.state.isModalVisible0}\n              footer={null}\n              onCancel={this.handleCancel0}\n            >\n              <Form\n                {...layout}\n                ref={this.formRef}\n                name=\"control-ref\"\n                onFinish={this.onFinish}\n              >\n                <Form.Item\n                  name=\"upload\"\n                  label=\"Upload\"\n                  valuePropName=\"fileList\"\n                  getValueFromEvent={normFile}\n                  extra=\"longgggggggggggggggggg\"\n                >\n                  <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                    <Button icon={<UploadOutlined />}>Click to upload</Button>\n                  </Upload>\n                </Form.Item>\n                <Form.Item\n                  label=\" Name\"\n                  required\n                  tooltip=\"This is a required field\"\n                  \n                >\n                  <Input placeholder={this.props.list[\"productname\"]} />\n                </Form.Item>\n                <Form.Item label=\"Price \">\n                  <Form.Item name=\"input-number\" noStyle>\n                    <InputNumber placeholder={this.props.list[\"productprice\"]} />\n                  </Form.Item>\n                </Form.Item>\n                <Form.Item\n                  name=\"currency\"\n                  label=\"currency\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder={this.props.list[\"currency\"]} >\n                    <Option value=\"china\">TND</Option>\n                    <Option value=\"usa\">Euro</Option>\n                    <Option value=\"usa\">Dollar</Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item name={[\"user\", \"introduction\"]} label=\"Description\">\n                  <Input.TextArea placeholder={this.props.list[\"description\"]} />\n                </Form.Item>\n                <Form.Item\n                  name=\"wishlist\"\n                  label=\"wishlist\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder={this.props.list[\"wishlistname\"]}>\n\n                      {\n                          this.props.wishlists.map((element)=>{\n                              return(\n                                <Option value={element[\"wishlistname\"]}> {element[\"wishlistname\"]} </Option>\n                              )\n                          })\n                      }\n            \n\n\n\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"Status\"\n                  label=\"Status\"\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                    },\n                  ]}\n                >\n                  <Select placeholder={this.props.list[\"status\"]}>\n                    <Option value=\"china\">To buy</Option>\n                    <Option value=\"usa\">Bought</Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                  </Button>\n                  <Button htmlType=\"button\" onClick={this.handleCancel0}>\n                    Cancel\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n\n            <Button type=\"primary\" onClick={this.showModal}>\n              <i className=\"fas fa-trash-alt\" /> Delete\n            </Button>\n            <Modal\n              title=\"Are you sure to delete this product\"\n              visible={this.state.isModalVisible}\n              onOk={this.handleOk}\n              onCancel={this.handleCancel}\n            ></Modal>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Productcontent;\n","/home/rym/client/src/components/WishlistContent.js",["44","45","46","47","48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":2,"column":18,"nodeType":"56","messageId":"57","endLine":2,"endColumn":28},{"ruleId":"54","severity":1,"message":"59","line":12,"column":3,"nodeType":"56","messageId":"57","endLine":12,"endColumn":11},{"ruleId":"54","severity":1,"message":"60","line":14,"column":26,"nodeType":"56","messageId":"57","endLine":14,"endColumn":39},{"ruleId":"54","severity":1,"message":"61","line":7,"column":3,"nodeType":"56","messageId":"57","endLine":7,"endColumn":13},{"ruleId":"54","severity":1,"message":"62","line":8,"column":3,"nodeType":"56","messageId":"57","endLine":8,"endColumn":9},{"ruleId":"54","severity":1,"message":"59","line":12,"column":3,"nodeType":"56","messageId":"57","endLine":12,"endColumn":11},{"ruleId":"54","severity":1,"message":"60","line":14,"column":26,"nodeType":"56","messageId":"57","endLine":14,"endColumn":39},{"ruleId":"63","severity":1,"message":"64","line":100,"column":21,"nodeType":"65","endLine":105,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":196,"column":21,"nodeType":"65","endLine":196,"endColumn":52},{"ruleId":"66","severity":1,"message":"68","line":201,"column":21,"nodeType":"65","endLine":205,"endColumn":22},{"ruleId":"69","severity":1,"message":"70","line":240,"column":65,"nodeType":"71","messageId":"72","endLine":240,"endColumn":67},{"ruleId":"63","severity":1,"message":"64","line":245,"column":44,"nodeType":"65","endLine":245,"endColumn":81},{"ruleId":"69","severity":1,"message":"70","line":284,"column":66,"nodeType":"71","messageId":"72","endLine":284,"endColumn":68},{"ruleId":"63","severity":1,"message":"64","line":290,"column":41,"nodeType":"65","endLine":294,"endColumn":43},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'TextArea' is defined but never used.","'InboxOutlined' is defined but never used.","'DatePicker' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]